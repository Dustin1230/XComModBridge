//This script was generated by HexToPseudoCode decompiler for use with PatchUPK/PatcherGUI tool
UPK_FILE = XComGame.upk
OBJECT = XGUnit.OnTurnBeginHook : AUTO
[REPLACEMENT_CODE]

/*
function OnTurnBeginHook()
{
    XComGameInfo(WorldInfo.Game).Mods[0].Mods("RoulettePlus.RoulettePlusMod").Object(self, true);
    XComGameInfo(WorldInfo.Game).Mods[0].Mods("AllMods", "TurnBeginHook");
    ResetTurnActions();
    m_bCovertHackerThisTurn = false;
    m_bAbsorptionFieldsWorked = false;
    m_bLightningReflexesUsed = false;
    m_bFreeFireActionTaken = false;
    m_bCloseAndPersonalTaken = false;
    m_bFiredReactiveTargeting = false;
    m_bHadShieldThisTurn = false;
    m_arrMoraleEventsThisTurn.Length = 0;
    // End:0x1B7
    if((!GetCharacter().HasUpgrade(95) && !IsAffectedByAbility(91)) && !IsAffectedByAbility(92))
    {
        Unhide();
    }
    // End:0x1E4
    if((IsAffectedByAbility(92)) && (GetStealthCharges()) == 0)
    {
        ClearAppliedAbility(92);
    }
    // End:0x21C
    if((m_bNeuralDampingStun || m_iElectropulseTurn > 0) || IsStrangled())
    {
        SetMoves(0);
    }
    m_bExaltHacked = false;
    //return;    
}
*/

		19 19 10 25 19 2E <Class.XComGameInfo> 19 01 <Engine.Actor.WorldInfo> [@] <Engine.WorldInfo.Game> 00 ( 01 <Engine.WorldInfo.Game> ) [@] <XComGameInfo.Mods> 00 ( 01 <XComGameInfo.Mods> ) [@] <NullRef> 00 ( 1B <Mods> 1F <%t "RoulettePlus.RoulettePlusMod"> 16 ) [@] <NullRef> 00 ( 1B <Object> 17 27 16 )
		19 10 25 19 2E <Class.XComGameInfo> 19 01 <Engine.Actor.WorldInfo> [@] <Engine.WorldInfo.Game> 00 ( 01 <Engine.WorldInfo.Game> ) [@] <XComGameInfo.Mods> 00 ( 01 <XComGameInfo.Mods> ) [@] <NullRef> 00 ( 1B <Mods> 1F <%t "AllMods"> 1F <%t "TurnBeginHook"> 16 )

/*(0x0000/0x0000)*/ 1B <ResetTurnActions> 16 
/*(0x000A/0x000A)*/ 14 2D 01 <@m_bCovertHackerThisTurn> 28 
/*(0x0016/0x0012)*/ 14 2D 01 <@m_bAbsorptionFieldsWorked> 28 
/*(0x0022/0x001A)*/ 14 2D 01 <XGUnitNativeBase.m_bLightningReflexesUsed> 28 
/*(0x002E/0x0022)*/ 14 2D 01 <XGUnitNativeBase.m_bFreeFireActionTaken> 28 
/*(0x003A/0x002A)*/ 14 2D 01 <XGUnitNativeBase.m_bCloseAndPersonalTaken> 28 
/*(0x0046/0x0032)*/ 14 2D 01 <@m_bFiredReactiveTargeting> 28 
/*(0x0052/0x003A)*/ 14 2D 01 <@m_bHadShieldThisTurn> 28 
/*(0x005E/0x0042)*/ 0F 36 01 <@m_arrMoraleEventsThisTurn> 25 
/*(0x006A/0x004A)*/ 07 [@label_0x00C1] 82 82 81 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 5F 16 ) 16 18 [@] ( 81 1B <IsAffectedByAbility> 2C 5B 16 16 16 ) 18 [@] ( 81 1B <IsAffectedByAbility> 2C 5C 16 16 16 ) 
/*(0x00B7/0x0093)*/ 	1C <XGUnitNativeBase.Unhide> 16 
/*(0x00C1/0x0099)*/ [#label_0x00C1]
/*(0x00C1/0x0099)*/ 07 [@label_0x00EE] 82 1B <IsAffectedByAbility> 2C 5C 16 18 [@] ( 9A 1B <GetStealthCharges> 16 25 16 16 ) 
/*(0x00E2/0x00BA)*/ 	1B <ClearAppliedAbility> 2C 5C 16 
/*(0x00EE/0x00C6)*/ [#label_0x00EE]
/*(0x00EE/0x00C6)*/ 07 [@label_0x0126] 84 84 2D 01 <XGUnitNativeBase.m_bNeuralDampingStun> 18 [@] ( 97 01 <XGUnitNativeBase.m_iElectropulseTurn> 25 16 16 ) 18 [@] ( 1B <IsStrangled> 16 16 ) 
/*(0x011B/0x00EB)*/ 	1B <SetMoves> 25 16 
/*(0x0126/0x00F6)*/ [#label_0x0126]
/*(0x0126/0x00F6)*/ 14 2D 01 <XGUnitNativeBase.m_bExaltHacked> 28 
/*(0x0132/0x00FE)*/ 04 0B 
/*(0x0134/0x0100)*/ 53 
